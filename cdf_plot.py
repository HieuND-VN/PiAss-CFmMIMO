import numpy as np
import matplotlib.pyplot as plt
# valid_rpas = np.array([
#     108.57096436, 148.4586223, 96.49203713, 106.48571413, 76.86522588,
#     25.78480889, 113.91691825, 81.91235218, 46.98777467, 69.28966264,
#     115.91050061, 108.68543462, 105.86059418, 88.4032945, 91.11042434,
#     101.90690382, 29.29587752, 51.77005229, 76.68415299, 81.93658497,
#     76.29567491, 37.02209655, 79.40155018, 30.81012402, 107.45292198,
#     83.24637212, 68.24505354, 42.75620235, 64.96212308, 35.13847699,
#     28.98940664, 85.90400779, 59.62010942, 78.46256597, 32.32278822,
#     18.59284679, 68.42256835, 59.71036873, 173.85030984, 59.74477963,
#     96.00435363, 55.81156294, 101.75960185, 74.18369298, 79.47884721,
#     70.0107337, 105.12915248, 16.4121107
# ])

valid_rpas = np.array([
       31.58057377, 60.48258946, 39.06015514, 40.97269884, 41.49118551,
       43.05330307, 44.12973306, 47.78570307, 48.11780101, 48.40335636,
       49.48465709, 51.64190936, 52.1798926 , 52.36982472, 52.65280099,
       53.16894164, 54.30485258, 55.72231892, 56.18538893, 56.49303436,
       57.4718613 , 58.17543208, 58.6384024 , 59.56672993, 60.54056556,
       61.18564163, 62.23355943, 62.84282992, 62.88979737, 63.79789677,
       64.75944652, 65.21642667, 65.31458493, 68.66230679, 69.28367826,
       69.53200407, 69.59141347, 69.90971898, 72.33225972, 72.64600151,
       72.81894007, 74.88513323, 73.15784605, 75.17004851, 77.23961655,
       79.34483162, 82.76339354, 90.12673])

valid_gpas = np.array([ 36.41234577,  38.61407434,  46.99750539,  49.78235114,
        51.77005229,  55.6198264 ,  55.81156294,  57.72320808,
        62.32323191,  64.95315349,  67.02303062,  68.27768251,
        68.4397061 ,  69.27666199,  69.29557   ,  70.01136491,
        70.8134034 ,  71.94944739,  72.05404612,  72.09499682,
        72.62884254,  72.75640033,  73.41228342,  74.20995167,
        74.91331598,  75.17182609,  75.79529795,  75.90400779,
        76.29567491,  76.86522588,  77.27877401,  78.47710471,
        78.98931864,  79.40811369,  79.47965105,  81.12882217,
        83.8096027 ,  81.91691825,  78.7589633 ,  85.86059418,
        86.0155768 ,  88.4032945 ,  89.03976745,  90.65021135,
        96.57839969,  97.95654026,  98.57096436, 102.59761812])

valid_mapas = np.array([ 38.70505795,  42.64913112,  50.18580422,  53.04235349,  78.85932506,
        60.71298575,  62.98433924,  65.56484954,  67.01355717,  72.24454156,
        74.02942449,  74.20109682,  74.51952236,  75.38487213,  75.57363871,
        75.68364471,  76.11724357,  76.42010253,  77.12916542,  77.13314589,
        77.38853953,  78.12074414,  78.25837739,  78.68976965,  78.69493281,
        78.7170044 ,  78.78326665,  78.93659491,  79.42481059,  79.42613309,
        79.46741477,  79.84349678,  79.9004994 ,  80.05814772,  80.73783317,
        81.22718739,  81.23609325,  82.10432997,  82.53878104,  83.99218814,
        86.76144347,  88.46845858,  89.59944627,  90.75177609,  93.15291554,
        98.81947945, 102.0611336 , 111.93344902])

valid_hqcnn = np.array([ 60.192534  ,  62.99541673,  70.64935813,  74.44711851,
        79.54707959,  81.12529543,  81.70929814,  82.3359549 ,
        83.69199274,  85.42007615,  86.1023673 ,  87.48045356,
        87.86401692,  89.0099189 ,  91.71470597,  92.48272235,
        92.60014586,  97.63748346,  93.051795  ,  93.89162329,
        94.22981817,  94.67216426,  95.33015939,  95.38234645,
        96.39953622,  96.92706675,  97.12645747,  97.26043917,
        97.34661595,  97.4942656 ,  97.56685177,  97.71128166,
        97.98175677,  98.23933578,  98.62781957,  99.50321397,
        99.60621902, 109.70884454,  103.87569736, 100.90873373,
       104.59196627, 106.16717353, 101.35219729, 107.8760881 ,
       109.41325916, 108.07619476, 110.21871622, 115.67306018])

# valid_hqcnn = np.array([
#     110.9823    , 110.9823    , 108.32231081, 110.9823    , 100.03386767,
#     75.35683196, 110.9823    , 100.57683199,  84.69642673,  94.63777894,
#     110.9823    , 110.70041662, 110.92974675, 103.37130459, 105.18018219,
#     110.55835072,  76.77318429,  86.84361788,  97.43482789, 100.29578495,
#     97.29120438,  80.30098663,  98.73528546,  63.73662375, 110.9823    ,
#     101.18499654,  94.01786474,  82.77260691,  93.1197989 ,  79.20026947,
#     76.60063281, 103.67290453,  90.20906452,  97.03879605,  78.17331729,
#     72.00459886,  94.53485084,  88.98099092, 110.9823    ,  89.36945299,
#     106.88415714,  87.86648567, 109.0223777 ,  96.78966399,  99.32605931,
#     94.88706571, 110.9823    ,  84.46599101])

valid_mlp = np.array([
        46.75691658,  52.06855936,  55.01571307,  56.77621647,  57.20051826,
        77.25185133,  77.27190673,  79.59180952,  79.75854085,  65.69762826,
        67.02273289,  68.90617156,  69.56209435,  69.90706911,  70.36202871,
        70.67386203,  73.94428631,  74.63925559,  74.67169885,  74.84396165,
        74.96360034,  75.87616886,  75.92827287,  76.05070361,  77.14609073,
        77.39693863,  78.34189534,  78.70417306,  80.39703173,  81.66627036,
        82.0838009 ,  82.21993324,  82.69369721,  88.18253236,  91.41453704,
        91.98772291,  92.48740789, 102.02940215])



valid_cnn = np.array([ 58.59084191,  69.8447323 ,  76.53093684,  79.82251178,  80.95502166,
        84.27446255,  88.58273759,  89.1338317 ,  86.58222315,  84.84906059,
        92.46854233,  92.79627968,  93.15344978,  97.99737581,  94.55738868,
        94.97942604,  95.18049563,  96.35500818,  96.59412898,  97.21232191,
        97.54266218,  97.70724161,  98.40419561,  98.41623908,  98.69140486,
        98.76013102,  98.78322307,  99.05019259,  99.07368463,  99.35849767,
        103.96193728, 100.68206067, 101.61436707, 101.7173838 , 102.48232307,
       104.61161869, 104.62664037, 105.7467366 , 106.40673033, 106.68291593,
       106.85700696, 108.36541143, 109.23888377, 110.57956468, 110.62563453,
       112.59250231, 113.5839304 , 117.55621884])


sorted_rpas = np.sort(valid_rpas)
sorted_gpas = np.sort(valid_gpas)
sorted_mapas = np.sort(valid_mapas)
sorted_hqcnn = np.sort(valid_hqcnn)
sorted_mlp = np.sort(valid_mlp)
sorted_cnn = np.sort(valid_cnn)

common_min = 30
common_max = 120


sorted_rpas = np.concatenate(([common_min], sorted_rpas, [common_max]))
sorted_gpas = np.concatenate(([common_min], sorted_gpas, [common_max]))
sorted_mapas = np.concatenate(([common_min], sorted_mapas, [common_max]))
sorted_hqcnn = np.concatenate(([common_min], sorted_hqcnn, [common_max]))
sorted_mlp = np.concatenate(([common_min], sorted_mlp, [common_max]))
sorted_cnn = np.concatenate(([common_min], sorted_cnn, [common_max]))

cdf_rpas = np.arange(1, len(sorted_rpas) + 1) / len(sorted_rpas)
cdf_gpas = np.arange(1, len(sorted_gpas) + 1) / len(sorted_gpas)
cdf_mapas = np.arange(1, len(sorted_mapas) + 1) / len(sorted_mapas)
cdf_hqcnn = np.arange(1, len(sorted_hqcnn) + 1) / len(sorted_hqcnn)
cdf_mlp  = np.arange(1, len(sorted_mlp) + 1) / len(sorted_mlp)
cdf_cnn  = np.arange(1, len(sorted_cnn) + 1) / len(sorted_cnn)

plt.plot(sorted_rpas , cdf_rpas , marker = None, label='Random')
plt.plot(sorted_gpas , cdf_gpas , marker = None, label='Greedy')
plt.plot(sorted_mapas, cdf_mapas, marker = None, label='MasterAP')
plt.plot(sorted_hqcnn, cdf_hqcnn, marker = None, label='HQCNN')
plt.plot(sorted_mlp  , cdf_mlp  , marker = None, label='MLP')
plt.plot(sorted_cnn  , cdf_cnn  , marker = None, label='CNN')
# plt.title('CDF Plot', fontsize = 16)
plt.xlabel('Sum-rate value (Mbps)', fontsize = 16)
plt.ylabel('CDF',fontsize = 16)
x_ticks_value = np.array([30,60,90,120])
plt.xticks(x_ticks_value, fontsize=12)
plt.yticks(fontsize=12)
plt.grid(True)
plt.legend()
plt.xlim(28, 122)
plt.savefig('CDF.png', bbox_inches='tight', dpi=600)
plt.show()

fig = plt.gcf()  # Get current figure
print(fig.get_size_inches())